apiVersion: aquasecurity.github.io/v1alpha1
kind: ConfigAuditReport
metadata:
  annotations:
    trivy-operator.aquasecurity.github.io/report-ttl: 24h0m0s
  creationTimestamp: "2025-08-12T17:20:05Z"
  generation: 1
  labels:
    plugin-config-hash: 9f85fb657
    resource-spec-hash: 6c6997c4b7
    trivy-operator.resource.kind: ReplicaSet
    trivy-operator.resource.name: dvwa-598b776995
    trivy-operator.resource.namespace: dvwa
  name: replicaset-dvwa-598b776995
  namespace: dvwa
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: false
    controller: true
    kind: ReplicaSet
    name: dvwa-598b776995
    uid: 5acfa9e8-0265-4e0c-add3-bccf3ca68ee9
  resourceVersion: "5906"
  uid: b8cff6d8-5f87-47c2-a58e-9cf14f48d048
report:
  checks:
  - category: Kubernetes Security Check
    checkID: KSV106
    description: Containers must drop ALL capabilities, and are only permitted to
      add back the NET_BIND_SERVICE capability.
    messages:
    - container should drop all
    remediation: Set 'spec.containers[*].securityContext.capabilities.drop' to 'ALL'
      and only add 'NET_BIND_SERVICE' to 'spec.containers[*].securityContext.capabilities.add'.
    severity: LOW
    success: false
    title: Container capabilities must only include NET_BIND_SERVICE
  - category: Kubernetes Security Check
    checkID: KSV021
    description: Force the container to run with group ID > 10000 to avoid conflicts
      with the host’s user table.
    messages:
    - Container 'dvwa' of ReplicaSet 'dvwa-598b776995' should set 'securityContext.runAsGroup'
      > 10000
    remediation: Set 'containers[].securityContext.runAsGroup' to an integer > 10000.
    severity: LOW
    success: false
    title: Runs with GID <= 10000
  - category: Kubernetes Security Check
    checkID: KSV0125
    description: Ensure that all containers use images only from trusted registry
      domains.
    messages:
    - 'Container dvwa in replicaset dvwa-598b776995 (namespace: dvwa) uses an image
      from an untrusted registry.'
    remediation: Use images from trusted registries.
    severity: MEDIUM
    success: false
    title: Restrict container images to trusted registries
  - category: Kubernetes Security Check
    checkID: KSV013
    description: It is best to avoid using the ':latest' image tag when deploying
      containers in production. Doing so makes it hard to track which version of the
      image is running, and hard to roll back the version.
    messages:
    - Container 'dvwa' of ReplicaSet 'dvwa-598b776995' should specify an image tag
    remediation: Use a specific container image tag that is not 'latest'.
    severity: MEDIUM
    success: false
    title: Image tag ":latest" used
  - category: Kubernetes Security Check
    checkID: KSV018
    description: Enforcing memory limits prevents DoS via resource exhaustion.
    messages:
    - Container 'dvwa' of ReplicaSet 'dvwa-598b776995' should set 'resources.limits.memory'
    remediation: Set a limit value under 'containers[].resources.limits.memory'.
    severity: LOW
    success: false
    title: Memory not limited
  - category: Kubernetes Security Check
    checkID: KSV016
    description: When containers have memory requests specified, the scheduler can
      make better decisions about which nodes to place pods on, and how to deal with
      resource contention.
    messages:
    - Container 'dvwa' of ReplicaSet 'dvwa-598b776995' should set 'resources.requests.memory'
    remediation: Set 'containers[].resources.requests.memory'.
    severity: LOW
    success: false
    title: Memory requests not specified
  - category: Kubernetes Security Check
    checkID: KSV020
    description: Force the container to run with user ID > 10000 to avoid conflicts
      with the host’s user table.
    messages:
    - Container 'dvwa' of ReplicaSet 'dvwa-598b776995' should set 'securityContext.runAsUser'
      > 10000
    remediation: Set 'containers[].securityContext.runAsUser' to an integer > 10000.
    severity: LOW
    success: false
    title: Runs with UID <= 10000
  - category: Kubernetes Security Check
    checkID: KSV104
    description: A program inside the container can bypass Seccomp protection policies.
    messages:
    - container "dvwa" of replicaset "dvwa-598b776995" in "dvwa" namespace should
      specify a seccomp profile
    remediation: Specify seccomp either by annotation or by seccomp profile type having
      allowed values as per pod security standards
    severity: MEDIUM
    success: false
    title: Seccomp policies disabled
  - category: Kubernetes Security Check
    checkID: KSV011
    description: Enforcing CPU limits prevents DoS via resource exhaustion.
    messages:
    - Container 'dvwa' of ReplicaSet 'dvwa-598b776995' should set 'resources.limits.cpu'
    remediation: Set a limit value under 'containers[].resources.limits.cpu'.
    severity: LOW
    success: false
    title: CPU not limited
  - category: Kubernetes Security Check
    checkID: KSV012
    description: Force the running image to run as a non-root user to ensure least
      privileges.
    messages:
    - Container 'dvwa' of ReplicaSet 'dvwa-598b776995' should set 'securityContext.runAsNonRoot'
      to true
    remediation: Set 'containers[].securityContext.runAsNonRoot' to true.
    severity: MEDIUM
    success: false
    title: Runs as root user
  - category: Kubernetes Security Check
    checkID: KSV001
    description: A program inside the container can elevate its own privileges and
      run as root, which might give the program control over the container and node.
    messages:
    - Container 'dvwa' of ReplicaSet 'dvwa-598b776995' should set 'securityContext.allowPrivilegeEscalation'
      to false
    remediation: Set 'set containers[].securityContext.allowPrivilegeEscalation' to
      'false'.
    severity: MEDIUM
    success: false
    title: Can elevate its own privileges
  - category: Kubernetes Security Check
    checkID: KSV015
    description: When containers have resource requests specified, the scheduler can
      make better decisions about which nodes to place pods on, and how to deal with
      resource contention.
    messages:
    - Container 'dvwa' of ReplicaSet 'dvwa-598b776995' should set 'resources.requests.cpu'
    remediation: Set 'containers[].resources.requests.cpu'.
    severity: LOW
    success: false
    title: CPU requests not specified
  - category: Kubernetes Security Check
    checkID: KSV014
    description: An immutable root file system prevents applications from writing
      to their local disk. This can limit intrusions, as attackers will not be able
      to tamper with the file system or write foreign executables to disk.
    messages:
    - Container 'dvwa' of ReplicaSet 'dvwa-598b776995' should set 'securityContext.readOnlyRootFilesystem'
      to true
    remediation: Change 'containers[].securityContext.readOnlyRootFilesystem' to 'true'.
    severity: HIGH
    success: false
    title: Root file system is not read-only
  - category: Kubernetes Security Check
    checkID: KSV004
    description: Security best practices require containers to run with minimal required
      capabilities.
    messages:
    - Container 'dvwa' of 'replicaset' 'dvwa-598b776995' in 'dvwa' namespace should
      set securityContext.capabilities.drop
    remediation: Specify at least one unneeded capability in 'containers[].securityContext.capabilities.drop'
    severity: LOW
    success: false
    title: 'Default capabilities: some containers do not drop any'
  - category: Kubernetes Security Check
    checkID: KSV117
    description: The ports which are lower than 1024 receive and transmit various
      sensitive and privileged data. Allowing containers to use them can bring serious
      implications.
    messages:
    - replicaset dvwa-598b776995 in dvwa namespace should not set spec.template.spec.containers.ports.containerPort
      to less than 1024
    remediation: Do not map the container ports to privileged host ports when starting
      a container.
    severity: MEDIUM
    success: false
    title: Prevent binding to privileged ports
  - category: Kubernetes Security Check
    checkID: KSV030
    description: According to pod security standard 'Seccomp', the RuntimeDefault
      seccomp profile must be required, or allow specific additional profiles.
    messages:
    - Either Pod or Container should set 'securityContext.seccompProfile.type' to
      'RuntimeDefault'
    remediation: Set 'spec.securityContext.seccompProfile.type', 'spec.containers[*].securityContext.seccompProfile'
      and 'spec.initContainers[*].securityContext.seccompProfile' to 'RuntimeDefault'
      or undefined.
    severity: LOW
    success: false
    title: Runtime/Default Seccomp profile not set
  - category: Kubernetes Security Check
    checkID: KSV118
    description: Security context controls the allocation of security parameters for
      the pod/container/volume, ensuring the appropriate level of protection. Relying
      on default security context may expose vulnerabilities to potential attacks
      that rely on privileged access.
    messages:
    - container dvwa-598b776995 in dvwa namespace is using the default security context
    remediation: To enhance security, it is strongly recommended not to rely on the
      default security context. Instead, it is advisable to explicitly define the
      required security parameters (such as runAsNonRoot, capabilities, readOnlyRootFilesystem,
      etc.) within the security context.
    severity: HIGH
    success: false
    title: Default security context configured
  - category: Kubernetes Security Check
    checkID: KSV118
    description: Security context controls the allocation of security parameters for
      the pod/container/volume, ensuring the appropriate level of protection. Relying
      on default security context may expose vulnerabilities to potential attacks
      that rely on privileged access.
    messages:
    - replicaset dvwa-598b776995 in dvwa namespace is using the default security context,
      which allows root privileges
    remediation: To enhance security, it is strongly recommended not to rely on the
      default security context. Instead, it is advisable to explicitly define the
      required security parameters (such as runAsNonRoot, capabilities, readOnlyRootFilesystem,
      etc.) within the security context.
    severity: HIGH
    success: false
    title: Default security context configured
  - category: Kubernetes Security Check
    checkID: KSV003
    description: The container should drop all default capabilities and add only those
      that are needed for its execution.
    messages:
    - Container 'dvwa' of ReplicaSet 'dvwa-598b776995' should add 'ALL' to 'securityContext.capabilities.drop'
    remediation: Add 'ALL' to containers[].securityContext.capabilities.drop.
    severity: LOW
    success: false
    title: 'Default capabilities: some containers do not drop all'
  scanner:
    name: Trivy
    vendor: Aqua Security
    version: 0.28.0
  summary:
    criticalCount: 0
    highCount: 3
    lowCount: 10
    mediumCount: 6
  updateTimestamp: "2025-08-12T17:20:05Z"
